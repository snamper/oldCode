package jinrl_exploit_servlet;

import java.io.IOException;
import java.sql.ResultSet;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jinrl_exploit_IService.IBusiInfoService;
import jinrl_exploit_IService.IPositionService;
import jinrl_exploit_IService.IUserService;
import jinrl_exploit_Po.TbusiInfo;
import jinrl_exploit_Po.Tposition;
import jinrl_exploit_Po.Tuser;
import jinrl_exploit_common.DataConnect;
import jinrl_exploit_common.fc;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class EmailNoticeServlet extends HttpServlet {
	private IPositionService positionService;
	private IUserService userService;
	private IBusiInfoService busiInfoService;
	/**
	 * Constructor of the object.
	 */
	public EmailNoticeServlet() {
		super();
	}

	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
		// Put your code here
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		this.doPost(request, response);
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String busiInfoID = request.getParameter("busiInfoID");
		String currentUserid = request.getParameter("currentUserid");
		String dataid = request.getParameter("dataid");
		TbusiInfo busiInfo = busiInfoService.getBusiInfoByfid(busiInfoID);
		String emailNotice = busiInfo.getFemailnotice();
		String s[] = null;
		DataConnect dc = null;
		ResultSet checkrs = null;
		int flag = 1;//用来标示是否满足发邮箱的要求
		try{
		    dc = new DataConnect(busiInfo.getFconndatabase(), true);
			if("0".equals(emailNotice.subSequence(0, 1))){

				//替换开始--------------------------------------------------------------------------
				//替换当前用户
				while(emailNotice.indexOf("[user()]") != -1){
					emailNotice = fc.replace(emailNotice, "[user()]", currentUserid);
				}


				//获得主键名称
				String pkid=busiInfo.getFprimarykey();
				if(null==pkid || "".equals(pkid)){
					pkid="fid";
				}
				//获得整行的结果集
//				String qsql ="select "+fc.getString(busiInfo.getFsqlstring(), "select", "from")+" from "+busiInfo.getFtablename()+" where "+pkid+"='"+dataid+"'";
				//----------替换sql中可能含有的当前人员、所属岗位替换START----------------
				StringBuffer mainsql = new StringBuffer(busiInfo.getFsqlstring());
				
				String sq = mainsql.toString();
				if(mainsql.indexOf("[user()]") > -1){
					if(mainsql.indexOf("'[user()]'") > -1){
						sq = fc.replace(mainsql.toString(), "[user()]", currentUserid);
					}else{
						sq = fc.replace(mainsql.toString(), "[user()]", "'"+currentUserid+"'");
					}
				}
				
				if(sq.indexOf("[position()]") > -1){
				StringBuffer listpName = new StringBuffer();
				Tuser user = userService.getUserById(currentUserid);
				List<Tposition> listp = positionService.getPositionsByuser(user);
				for(Tposition p : listp){
					listpName.append(",'"+p.getFid()+"'");
				}
				sq = fc.replace(sq.toString(), "[position()]", "("+listpName.substring(1).toString()+")");
				}
				
				mainsql = new StringBuffer(sq);
				//----------替换sql中可能含有的当前人员、所属岗位替换OVER----------------
				String qsql = "select * from (" + mainsql +") as RENAME_123QAZ where RENAME_123QAZ." + pkid +"='" + dataid + "'";
				//替换字段
				ResultSet rs = dc.query(qsql);
				if(rs != null && rs.next()){
					while(emailNotice.indexOf("[") != -1 && emailNotice.indexOf("]") != -1){
						String field = fc.getString(emailNotice, "[", "]");
						//固定使用了getString
						String result = fc.changNull(rs.getString(field));
						emailNotice = fc.replace(emailNotice, "["+field+"]", result);
					}
				}

				dc.CloseResultSet(rs);
				//替换md5
				while(emailNotice.indexOf("md5(") != -1){
					String md5yuan = fc.getString(emailNotice, "md5(", ")");
					emailNotice = fc.replace(emailNotice, "md5("+md5yuan+")", fc.getMd5Str(md5yuan));
				}
				//替换结束---------------------------------------------------------------------------------------

				s = emailNotice.split("\\|");
				checkrs = dc.query(s[3].substring(4));
				if(checkrs != null && checkrs.next()){
					String value = checkrs.getString(1);
					if("true".equals(value.toLowerCase())){
						flag = 0;
					}
				}

			}

			if(flag == 0){
				String[] emails = s[2].split(",");
				for(String email : emails){
					fc.sendEmail(email, "通知("+busiInfo.getFtitle()+")", s[1]);
				}
			}
		}catch(Exception e){
			e.printStackTrace();
			System.out.println("业务信息表邮件通知错误：" + e.getMessage());
		}finally{
			dc.CloseResultSet(checkrs);
			dc.CloseConnect();
		}
		return;

	}

	/**
	 * Initialization of the servlet. <br>
	 *
	 * @throws ServletException if an error occurs
	 */
	public void init() throws ServletException {
		ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
		busiInfoService = (IBusiInfoService) context.getBean("busiInfoService");
		userService = (IUserService) context.getBean("userService");
		positionService = (IPositionService) context.getBean("positionService");
	}

}
