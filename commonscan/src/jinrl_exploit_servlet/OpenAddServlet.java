package jinrl_exploit_servlet;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import jinrl_exploit_IService.IFunctionService;
import jinrl_exploit_Po.Tfunction;
import jinrl_exploit_common.fc;

public class OpenAddServlet extends HttpServlet {

	private IFunctionService functionService;
	/**
	 * Constructor of the object.
	 */
	public OpenAddServlet() {
		super();
	}

	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
		// Put your code here
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		this.doPost(request, response);
	}

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("GB2312");
		String gotoBusiInfoID = request.getParameter("gotoBusiInfoID");
		String currentUserid = request.getParameter("currentUserid");
		String gotoVaule = fc.getpv(request, "gotoValue");
		String goalField = request.getParameter("goalField");
		Tfunction function = functionService.findByBusiInfoId(gotoBusiInfoID);
		String functionid=function.getFid();
		String sign = fc.getMd5Str(currentUserid+functionid+"H7F65E49JED5OIF4U4DE664C66D6EET3");
		String url = "busiInfo.do?method=showAddDataPage&tbusiInfoID="+gotoBusiInfoID+"&currentUserid="+currentUserid+"&functionid="+functionid+"&sign="+sign+"&goalField="+goalField+"&gotoVaule="+gotoVaule;
		request.getRequestDispatcher(url).forward(request, response);
	}

	/**
	 * Initialization of the servlet. <br>
	 *
	 * @throws ServletException if an error occurs
	 */
	public void init() throws ServletException {
		ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
		functionService = (IFunctionService) context.getBean("functionService");
	}

}
