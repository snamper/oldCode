package jinrl_exploit_servlet;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import jinrl_exploit_IService.IDownloadFileService;
import jinrl_exploit_Po.Tdownloadfile;
import jinrl_exploit_common.GetConfigValue;
import jinrl_exploit_common.fc;

public class DelFileServlet extends HttpServlet {
	IDownloadFileService downloadFileService;
	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
		// Put your code here
	}

	/**
	 * The doGet method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to get.
	 *
	 * @param request the request send by the client to the server
	 * @param response the response send by the server to the client
	 * @throws ServletException if an error occurred
	 * @throws IOException if an error occurred
	 */
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		this.doPost(request, response);
	}

	/**
	 * The doPost method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to post.
	 *
	 * @param request the request send by the client to the server
	 * @param response the response send by the server to the client
	 * @throws ServletException if an error occurred
	 * @throws IOException if an error occurred
	 */
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setContentType("text/text;charset=gb2312");
		//½ûÖ¹»º´æ
		response.setHeader("Pragma","No-Cache");
		response.setHeader("Cache-Control","No-Cache");
		response.setDateHeader("Expires",0);
		String dataid = request.getParameter("dataid");
		Tdownloadfile dlf =  downloadFileService.findById(dataid);
		String filename = dlf.getFfilename();
		String filepath = GetConfigValue.newInstance().filePosition()+filename;
		PrintWriter out = response.getWriter();
		if(fc.deleteFile(filepath) && downloadFileService.delete(dataid)){
			//É¾³ý³É¹¦
			out.print("alert('É¾³ý³É¹¦');");
		}else{
			out.print("alert('É¾³ýÊ§°Ü');");
		}
		return;
	}

	/**
	 * Initialization of the servlet. <br>
	 *
	 * @throws ServletException if an error occurs
	 */
	public void init() throws ServletException {
		ApplicationContext context = new ClassPathXmlApplicationContext(
		"applicationContext.xml");
		downloadFileService = (IDownloadFileService) context.getBean("downloadFileService");
	}

}
