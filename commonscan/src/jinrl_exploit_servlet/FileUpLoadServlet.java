package jinrl_exploit_servlet;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Timestamp;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import jinrl_exploit_IService.IDownloadFileService;
import jinrl_exploit_Po.Tdownloadfile;
import jinrl_exploit_common.GetConfigValue;
import jinrl_exploit_common.fc;
import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class FileUpLoadServlet extends HttpServlet
{
  private IDownloadFileService downloadFileService;

  public void destroy()
  {
    super.destroy();
  }

  public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException
  {
    doPost(request, response);
  }

  public void doPost(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException
  {
    String afterFileName = "";
    String tfName = "";
    String busiInfoid = request.getParameter("busiInfoid");
    String dataid = request.getParameter("dataid");
    String currentUserid = request.getParameter("currentUserid");

    DiskFileItemFactory factory = new DiskFileItemFactory();

    factory.setSizeThreshold(10485760);

    factory.setRepository(new File(request.getRealPath("/")));

    ServletFileUpload upload = new ServletFileUpload(factory);

    upload.setSizeMax(20971520L);
    List items = null;
    try
    {
      items = upload.parseRequest(request);
    } catch (FileUploadException e) {
      e.printStackTrace();
    }

    for (Iterator it = items.iterator(); it.hasNext(); ) {
      FileItem item = (FileItem)it.next();

      if (!(item.isFormField()))
      {
        String fileName = item.getName();

        tfName = fileName.substring(fileName.lastIndexOf("\\") + 1);
        //System.out.println("上传文件的名称：" + tfName);

        afterFileName = fc.GetOrderID("") + "_rename_" + tfName;
        String filename = GetConfigValue.newInstance().filePosition() + afterFileName;
        request.setAttribute("filename", filename);
        FileOutputStream fos = new FileOutputStream(filename);

        if (item.isInMemory()) {
          fos.write(item.get());
          fos.flush();
          fos.close();
        }
        else {
          int len;
          InputStream is = item.getInputStream();
          byte[] buffer = new byte[1024];

          while ((len = is.read(buffer)) > 0) {
            fos.write(buffer, 0, len);
          }
          is.close();
          fos.flush();
          fos.close();
        }
      } else {
        if ("busiInfoid".equals(item.getFieldName())) {
          busiInfoid = item.getString();
        }
        if ("dataid".equals(item.getFieldName())) {
          dataid = item.getString();
        }
        if ("currentUserid".equals(item.getFieldName())) {
          currentUserid = item.getString();
        }

      }

    }

    Tdownloadfile df = new Tdownloadfile(fc.GetOrderID(""), afterFileName, tfName, currentUserid, new Timestamp(new Date().getTime()), "完成", "0", busiInfoid, dataid);
    boolean ffa = downloadFileService.saveDownloadFile(df);
    String sMd5 = currentUserid + "1008181829553596867H7F65E49JED5OIF4U4DE664C66D6EET3";
    sMd5 = fc.getMd5Str(sMd5);

    String urla = "/busiInfo.do?method=getBusiInfo&tbusiInfoID=COPY31644&currentUserid=" + currentUserid + "&functionid=1008181829553596867&sign=" + sMd5 + "&dataidForUpLoad=" + dataid + "&busiInfoForUpLoad=" + busiInfoid;
    request.getRequestDispatcher(urla).forward(request, response);
  }

  public void init()
    throws ServletException
  {
    ApplicationContext context = new ClassPathXmlApplicationContext("applicationContext.xml");
    downloadFileService = ((IDownloadFileService)context.getBean("downloadFileService"));
  }
}