package jinrl_exploit_servlet;

import java.io.IOException;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import jinrl_exploit_common.DataConnect;
import jinrl_exploit_common.GetConfigValue;
import jinrl_exploit_common.Tools;
import jinrl_exploit_common.fc;

public class UpdateFunVersion extends HttpServlet {

	/**
	 * Constructor of the object.
	 */
	public UpdateFunVersion() {
		super();
	}

	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
		// Put your code here
	}

	/**
	 * The doGet method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to get.
	 *
	 * @param request
	 *            the request send by the client to the server
	 * @param response
	 *            the response send by the server to the client
	 * @throws ServletException
	 *             if an error occurred
	 * @throws IOException
	 *             if an error occurred
	 */
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		this.doPost(request, response);
	}

	/**
	 * The doPost method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to
	 * post.
	 *
	 * @param request
	 *            the request send by the client to the server
	 * @param response
	 *            the response send by the server to the client
	 * @throws ServletException
	 *             if an error occurred
	 * @throws IOException
	 *             if an error occurred
	 */
	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		try {

			String positionIDs = fc.getpv(request, "positionID");
			String userIDs = fc.getpv(request, "userID");
			String functionIDs = fc.getpv(request, "functionID");

			String[] userID = userIDs.split("\\|");

			List<String> allUserID = new ArrayList<String>();
			if (!"".equals(positionIDs)) {// 是否需要执行SQL查询
				// 人员
				String uids = "";
				for (int i = 0; i < userID.length; i++) {
					if (i == 0) {
						uids += "'" + userID[i] + "'";
					} else {
						uids += ",'" + userID[i] + "'";
					}
				}
				// 岗位
				String[] positionID = positionIDs.split("\\|");
				String pids = "";
				for (int i = 0; i < positionID.length; i++) {
					if (i == 0) {
						pids += "'" + positionID[i] + "'";
					} else {
						pids += "," + "'" + positionID[i] + "'";
					}
				}

				DataConnect dc = new DataConnect("sysdb", false);
				String sql = "select distinct fuserid from tpositionuser where "
						+ "fpositionid in ("
						+ pids
						+ ") or fuserid in("
						+ uids
						+ ")";

				ResultSet rs = dc.query(sql);
				try {
					while (rs != null && rs.next()) {
						allUserID.add(rs.getString("fuserid"));
					}
				} catch (Exception e) {
					e.printStackTrace();
				} finally {
					dc.CloseResultSet(rs);
					dc.CloseConnect();
				}
			} else {
				for (int i = 0; i < userID.length; i++) {
					allUserID.add(userID[i]);
				}

			}

			String dataFile = GetConfigValue.newInstance().dataFile();

			String[] functionID = functionIDs.split("\\|");
			for (String uID : allUserID) {
				String filePath = dataFile + "/" + uID;

				if("allFunction".equals(functionIDs)){
					String versionFilePath = dataFile + "/" + uID + "/versions.xml";
					Tools.deleteFile(versionFilePath);
				}else{
					for (String funID : functionID) {
						String fileName = funID + ".dat";
						String allFilePath = filePath + "/" + fileName;
						Tools.deleteFile(allFilePath);
					}
				}

			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		// boolean fileExists = Tools.checkFileExists(allFilePath);
		// boolean versionExists = Tools.checkFileExists(versionFilePath);

	}

	/**
	 * Initialization of the servlet. <br>
	 *
	 * @throws ServletException
	 *             if an error occurs
	 */
	public void init() throws ServletException {
		// Put your code here
	}

}
