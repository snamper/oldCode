/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.jinrl.powermodule.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.jinrl.powermodule.actionform.UserForm;
import com.jinrl.powermodule.pojo.Tposition;
import com.jinrl.powermodule.pojo.Tuser;
import com.jinrl.powermodule.service.CheckPower;
import com.jinrl.powermodule.service.UserService;

/**
 * MyEclipse Struts Creation date: 05-12-2010
 *
 * XDoclet definition:
 *
 * @struts.action path="/user" name="userForm" scope="request"
 */
public class UserAction extends DispatchAction {
	private UserService userService;
	private CheckPower cp;

	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	public void setCp(CheckPower cp) {
		this.cp = cp;
	}

	/**
	 * 获得当前用户的所有信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward getCurrentUser(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setCharacterEncoding("gb2312");
		if (request.getSession().getAttribute("currentUserid") == null) {
			try {
				response.getWriter().print("超时，请重新登录!");
				return null;
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		String currentUserid = (String) request.getSession().getAttribute(
				"currentUserid");
		Tuser user = userService.getUserById(currentUserid);
		request.setAttribute("currentUser", user);
		if ("1".equals(request.getParameter("updateuser"))) {
			return mapping.findForward("showupdate");
		}
		// 获得此用户所有岗位
		List<Tposition> listposition = cp.getPositionsByuser2(user);
		request.setAttribute("currentPos", listposition);
		return mapping.findForward("showCurrentUser");
	}

	/**
	 * 修改用户
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward updateUser(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setCharacterEncoding("gb2312");
		UserForm userForm = (UserForm) form;
		String currentUserid = (String) request.getSession().getAttribute("currentUserid");
		Tuser user = userService.getUserById(currentUserid);
		user.setFusername(userForm.getUsername());
		user.setFsex(userForm.getSex());
		user.setFbirthday(userForm.getBirthday());
		user.setEmail(userForm.getEmail());
		user.setfGoogleDayUrl(userForm.getfGoogleDayUrl());
		user.setFcustomUrl(userForm.getFcustomUrl());
		PrintWriter out = null;
		try {
			out = response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
		if(userService.updateUser(user)){
			out.print("修改成功！");
		}else{
			out.print("修改失败！");
		}
		out.flush();
		out.close();
		return null;

	}

	/**
	 * 修改密码
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward updatePassword(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		response.setCharacterEncoding("gb2312");
		PrintWriter out = null;
		try {
			out = response.getWriter();
		} catch (IOException e) {
			e.printStackTrace();
		}
		//
		String currentUserid = (String) request.getSession().getAttribute("currentUserid");
		Tuser user = userService.getUserById(currentUserid);
		String old = request.getParameter("old");
		String new1 = request.getParameter("new1");
		String new2 = request.getParameter("new2");
		if(user.getFpassword().equals(old)){
			if(new1.equals(new2)){
				user.setFpassword(new1);
				userService.updateUser(user);
				out.print("密码修改成功！");
			}else{
				out.print("密码修改失败！");
			}
		}else{
			out.print("密码修改失败！");
		}
		out.flush();
		out.close();
		return null;

	}
}