/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.agents.servlet;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.URLEncoder;
import java.util.Date;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.agents.pojo.AgentNews;
import com.agents.pojo.CoAgent;
import com.agents.service.AgentNewsService;
import com.agents.service.AgentPageService;
import com.agents.service.ClientService;
import com.agents.service.FillCardService;
import com.agents.service.ProduceTypeService;
import com.agents.util.Config;
import com.agents.util.CreateAgentObj;
import com.agents.util.Tools;
import com.agents.util.fc;

  
  
/**
 * MyEclipse Struts Creation date: 12-16-2010
 * @struts.action path="/agentPage" name="agentPageForm" scope="request"
 */
public class AgentPageAction extends HttpServlet {
	private AgentPageService apServcie = new AgentPageService();
	//private ChargesService chServcie = new ChargesService();
	private ProduceTypeService ProduceType=new ProduceTypeService();
	private ClientService clientService = new ClientService();
	private FillCardService fillCardService = new FillCardService();
	private AgentNewsService anService = new AgentNewsService();
    private String webPath=Config.getChildValue("config", "url");
	/**
	 * Constructor of the object.
	 */
	public AgentPageAction() {
		super();
	}

	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
		// Put your code here
	}

	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		this.doPost(request, response);

	}
	/**
	 * Method execute
	 */

	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String method = request.getParameter("method");  
		if("findAgentByDomain".equals(method)){
			this.findAgentByDomain(request, response);
		}else
		if("openSerch".equals(method)){
			this.openSerch(request, response);
		}else
		if("openCharges".equals(method)){
			this.openCharges(request, response);
		}else
		if("AddCilent".equals(method)){
			this.AddCilent(request, response);
		}
		else if("openRegdit".equals(method)){
			this.openRegdit(request, response);
		}
	}
	
	
// 主页模板加载方法
	public void findAgentByDomain(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		request.setCharacterEncoding("GB2312");
		response.setContentType("text/html;charset=GB2312");
		//获得域名
		String domainName=request.getServerName();
		
		if("192.168.9.149".equals(domainName)){
//		domainName = "hndx.dinghengtx.com";
//		domainName = "www.9etx.com";
//		domainName = "mer.7996.com";
		}
		
		if (domainName!=null) {
			domainName=domainName.substring(domainName.indexOf(".")+1, domainName.length());
		}
//		//获得客服端IP
//		String ClientIp = request.getHeader("X-Client-Address");
//		if (ClientIp == null || ClientIp.equals("")){
//			ClientIp = request.getRemoteAddr();
//		}
//		if(ClientIp.equals("192.168.9.112")){
//			ClientIp = "118.144.91.3";
//		}
//		     
//		ClientIp="118.144.91.31";    
		
	    //用户域名验证
//		com.agents.pojo.CoAgent agent = apServcie.findBydomainName(domainName);
		com.agents.pojo.CoAgent agent = null;
		
		//库中没有代理商时，读取配置文件中写入的代理商信息
		if(agent == null){
			System.out.print("域名验证未通过,读取配置文件:"+domainName);
			agent = CreateAgentObj.createAgent();
		}
		
		if(agent == null){
			System.out.print("域名验证彻底未通过:"+domainName);
			response.sendError(404);
			return;   
		}  
		request.getSession().setAttribute("currentAgent", agent);
		String indexPage = agent.getFindexPage();
		if ((indexPage==null)||indexPage.equals("")) {  
			indexPage="index.html";
		}  
		String realPath = request.getRealPath("/");
		File file = new File(realPath + "/agentindex/ai_" + agent.getFid() + "/" + indexPage);
		if(!file.exists()){
			System.out.println("目录不存在："+realPath + "/agentindex/ai_" + agent.getFid() + "/" + indexPage);
			response.sendError(404);
			return;
		}
		BufferedReader reader = null;
		String images =null;
//		StringBuffer resultString = new StringBuffer();
		try {
			List<AgentNews> listAgentNews = null;
			reader = new BufferedReader(new FileReader(file));
			String tempString = null;
			while ((tempString = reader.readLine()) != null) {
				if(tempString.indexOf("from$logon") != -1){
					tempString = fc.replace(tempString, "from$logon", agent.getFid() + "_" + "logon");
				}
				if(tempString.indexOf("input$userid") != -1){
					tempString = fc.replace(tempString, "input$userid", "userName");
				}
				if(tempString.indexOf("input$password") != -1){
					tempString = fc.replace(tempString, "input$password", "passWord");
				}
				if(tempString.indexOf("input$checkcode") != -1){
					tempString = fc.replace(tempString, "input$checkcode", "checkCode");
				}
				if(tempString.indexOf("btn$logon") != -1){
					tempString = fc.replace(tempString, "btn$logon", agent.getFid() + "_" + "btnlogon");
				}
				if(tempString.indexOf("img$checkcode") != -1){
					
					tempString = fc.replace(tempString, Tools.getAttributeValue(tempString, "img$checkcode", "src"), "checkCode?"+new Date().getTime());
				}
				if(tempString.indexOf("out$phone") != -1){
					tempString = fc.replace(tempString, Tools.divString(tempString, "out$phone"), agent.getFservicePhone());
				}
				if(tempString.indexOf("out$qq1") != -1){
					String webQQ= "<a target=\"_blank\" href=\"http://wpa.qq.com/msgrd?v=3&uin="+agent.getFserviceQq1()+"&site=qq&menu=yes\"><img border=\"0\" src=\"http://wpa.qq.com/pa?p=2:"+agent.getFserviceQq1()+":50\" alt=\"点击这里给我发消息\" title=\"点击这里给我发消息\"></a>";
					tempString = fc.replace(tempString, Tools.divString(tempString, "out$qq1"), webQQ);
				}
				if(tempString.indexOf("out$qq2") != -1){
					String webQQ= "<a target=\"_blank\" href=\"http://wpa.qq.com/msgrd?v=3&uin="+agent.getFserviceQq2()+"&site=qq&menu=yes\"><img border=\"0\" src=\"http://wpa.qq.com/pa?p=2:"+agent.getFserviceQq2()+":50\" alt=\"点击这里给我发消息\" title=\"点击这里给我发消息\"></a>";
					tempString = fc.replace(tempString, Tools.divString(tempString, "out$qq2"), webQQ);
				}
				if(tempString.indexOf("out$qq3") != -1){
					String webQQ= "<a target=\"_blank\" href=\"http://wpa.qq.com/msgrd?v=3&uin="+agent.getFserviceQq3()+"&site=qq&menu=yes\"><img border=\"0\" src=\"http://wpa.qq.com/pa?p=2:"+agent.getFserviceQq3()+":50\" alt=\"点击这里给我发消息\" title=\"点击这里给我发消息\"></a>";
					tempString = fc.replace(tempString, Tools.divString(tempString, "out$qq3"), webQQ);
				}
				if(tempString.indexOf("out$qq4") != -1){
					String webQQ= "<a target=\"_blank\" href=\"http://wpa.qq.com/msgrd?v=3&uin="+agent.getFserviceQq4()+"&site=qq&menu=yes\"><img border=\"0\" src=\"http://wpa.qq.com/pa?p=2:"+agent.getFserviceQq4()+":50\" alt=\"点击这里给我发消息\" title=\"点击这里给我发消息\"></a>";
					tempString = fc.replace(tempString, Tools.divString(tempString, "out$qq4"), webQQ);
				}
				if(tempString.indexOf("out$agentname") != -1){
					tempString = fc.replace(tempString, Tools.divString(tempString, "out$agentname"), agent.getFname());
				}
				if(tempString.indexOf("out$domain") != -1){
					tempString = fc.replace(tempString, Tools.divString(tempString, "out$domain"), agent.getFdomainIP());
				}
				if(tempString.indexOf("src=\"images/") != -1 && tempString.indexOf("img") != -1 && tempString.indexOf("src") != -1){
					images = Tools.getTagAttriValue(tempString, "img", "src");
					tempString = fc.replace(tempString, images, "agentindex/ai_"+agent.getFid()+"/" + images);
				}
				if(tempString.indexOf("background=\"images/") != -1){
					images = Tools.getTagAttriValue(tempString, "td", "background");
					tempString = fc.replace(tempString, images, "agentindex/ai_"+agent.getFid()+"/" + images);
				}  
				if(tempString.indexOf("href=\"images/") != -1 && tempString.indexOf("link") != -1 && tempString.indexOf("href") != -1){
					images = Tools.getTagAttriValue(tempString, "link", "href");
					tempString = fc.replace(tempString, images, "agentindex/ai_"+agent.getFid()+"/" + images);
				}
				if(tempString.indexOf("src=\"images/") != -1 && tempString.indexOf("script") != -1 && tempString.indexOf("src") != -1){
					images = Tools.getTagAttriValue(tempString, "script", "src");
					tempString = fc.replace(tempString, images, "agentindex/ai_"+agent.getFid()+"/" + images);
				}
				if(tempString.indexOf("src=\"images/") != -1 && tempString.indexOf("input") != -1 && tempString.indexOf("src") != -1){
					images = Tools.getTagAttriValue(tempString, "input", "src");
					tempString = fc.replace(tempString, images, "agentindex/ai_"+agent.getFid()+"/" + images);
				}
				if(tempString.indexOf("flashWrite('images/") != -1){
					tempString = fc.replace(tempString, "flashWrite('images/", "flashWrite('agentindex/ai_"+agent.getFid()+"/images/");
				}
					tempString = fc.replace(tempString, "亿通支付平台", agent.getFname());
					tempString = fc.replace(tempString, "亿通支付卡", agent.getFname());
					tempString = fc.replace(tempString, "京ICP证XXXXXX号", agent.getFicp());  
					tempString = fc.replace(tempString, "GmLong.com",  agent.getFdomainName());
    
					if(tempString.indexOf("结算款已经发放，请各合作方注意查收") != -1){
						if(listAgentNews == null){
							listAgentNews = anService.findByAgentID(agent.getFid());
						}
						AgentNews anews = null;  
						try{
							anews = listAgentNews.get(0);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月5日结算款已经发放，请各合作方注意查收", "<a target=\"_blank\" href=\"ShowAgentNewsServlet?agentNewsID="+anews.getId()+"\" class=\"link1\">"+anews.getFtitle());
						}catch(Exception e){
							String s = fc.getTime("MM月dd日",-1 * 24 * 60);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月5日结算款已经发放，请各合作方注意查收", "<a href=\"#\" class=\"link1\">"+s+"结算款已经发放，请各合作方注意查收");
						}   
						try{
							anews = listAgentNews.get(1);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月4日结算款已经发放，请各合作方注意查收", "<a target=\"_blank\" href=\"ShowAgentNewsServlet?agentNewsID="+anews.getId()+"\" class=\"link1\">"+anews.getFtitle());
						}catch(Exception e){
							String s = fc.getTime("MM月dd日",-2 * 24 * 60);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月4日结算款已经发放，请各合作方注意查收", "<a href=\"#\" class=\"link1\">"+s+"结算款已经发放，请各合作方注意查收");
						}
						try{
							anews = listAgentNews.get(2);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月3日结算款已经发放，请各合作方注意查收", "<a target=\"_blank\" href=\"ShowAgentNewsServlet?agentNewsID="+anews.getId()+"\" class=\"link1\">"+anews.getFtitle());
						}catch(Exception e){
							String s = fc.getTime("MM月dd日",-3 * 24 * 60);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月3日结算款已经发放，请各合作方注意查收", "<a href=\"#\" class=\"link1\">"+s+"结算款已经发放，请各合作方注意查收");
						}
						try{
							anews = listAgentNews.get(3);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月2日结算款已经发放，请各合作方注意查收", "<a target=\"_blank\" href=\"ShowAgentNewsServlet?agentNewsID="+anews.getId()+"\" class=\"link1\">"+anews.getFtitle());
						}catch(Exception e){
							String s = fc.getTime("MM月dd日",-4 * 24 * 60);
							tempString = fc.replace(tempString, "<a href=\"#\" class=\"link1\">11月2日结算款已经发放，请各合作方注意查收", "<a href=\"#\" class=\"link1\">"+s+"结算款已经发放，请各合作方注意查收");
						}
					}
				response.getWriter().println(tempString);
			}
			reader.close();
			String sError = request.getParameter("sError");
			if(!"".equals(sError)){
				if("1".equals(sError)){
					sError = "用户名或密码错误!";
					response.getWriter().print("<script>alert('"+sError+"');</script>");
				}
				if("2".equals(sError)){
					sError = "验证码错误!";
					response.getWriter().print("<script>alert('"+sError+"');</script>");
				}
				if("3".equals(sError)){
					sError = "当前账号尚未通过审核,请联系商务";
					response.getWriter().print("<script>alert('"+sError+"');</script>");
				}
				if("4".equals(sError)){
					sError = "您的硬件信息没有通过验证绑定！";  
					response.getWriter().print("<script>alert('"+sError+"');</script>");
				}
			}      
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException e1) {
				}  
			}
		}  
	}
	//结算费率
	public void openCharges(HttpServletRequest request,HttpServletResponse response) {
		HttpSession session= request.getSession();
		CoAgent agent = (CoAgent)session.getAttribute("currentAgent");
		List<String[]>  listch = ProduceType.findByAgentId(agent.getFid());  
		request.getSession().setAttribute("listch", listch);
		try {
			response.sendRedirect("charges.jsp");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	//停用
	public void openRegdit(HttpServletRequest request,HttpServletResponse response) {
		
		String domainName=request.getServerName();
		if (domainName!=null) {
			domainName=domainName.substring(domainName.indexOf(".")+1, domainName.length());
		}
		System.out.println("====================="+domainName);  
		com.agents.pojo.CoAgent agent = apServcie.findBydomainName(domainName);
		String indexPage = "index.html";  
	 	String realPath = request.getRealPath("/");
		File file = new File(realPath + "\\agentindex\\ai_" + agent.getFid() + "\\" + indexPage);
		File fileRegdit = new File(realPath  + "\\regdit.jsp");
		BufferedReader reader = null;
		try {
			String tempString = null;
			reader = new BufferedReader(new FileReader(file));
			StringBuffer allContent = new StringBuffer();
			while ((tempString = reader.readLine()) != null) {
				allContent.append(tempString);
			}
			String headers = Tools.getDivHtml(allContent.toString(), "mark$header");
			String footers = Tools.getDivHtml(allContent.toString(), "mark$footer");
			//
			reader = new BufferedReader(new FileReader(fileRegdit));
			while ((tempString = reader.readLine()) != null) {
				if(tempString.indexOf("<!--页眉结束-->") != -1){
						response.getWriter().println(headers);
				}

				if(tempString.indexOf("<!--页脚结束-->") != -1){
						response.getWriter().println(footers);
				}
				response.getWriter().println(tempString);
			}

			//
			reader.close();
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (reader != null) {
				try {
					reader.close();
				} catch (IOException e1) {
				}
			}
		}
	}


	public void openSerch(HttpServletRequest request,HttpServletResponse response) {
		HttpSession session = request.getSession();
		CoAgent agent = (CoAgent)session.getAttribute("currentAgent");
		String datatime = fc.getpv(request, "datatime");
		
		if("".equals(datatime)){
			datatime = fc.getTime("").substring(0,10);
		}
		String selectItem = fc.getpv(request, "selectItem");
		String selectItemValue = fc.getpv(request, "selectItemValue");
		String fcardid = fc.getpv2(request, "fcardid");
		
		List<String[]> list = null; 
		if(!"".equals(selectItemValue) || !"".equals(fcardid)){
			
			list = fillCardService.findFillCards(datatime,selectItemValue,selectItem,fcardid,"",agent.getFid());
		}
		session.setAttribute("list", list);
		session.setAttribute("datatime", datatime);
		session.setAttribute("selectItem", selectItem);
		session.setAttribute("selectItemValue", selectItemValue);
		session.setAttribute("fcardid", fcardid);

		try {
			response.sendRedirect("search.jsp");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}


	
	public void AddCilent(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException  {
		HttpSession session= request.getSession();
		CoAgent agent = (CoAgent)session.getAttribute("currentAgent");
		String faliasId = request.getParameter("faliasId");
		String checkcode_reg = request.getParameter("checkcode_reg");
		String fpassword = request.getParameter("fpassword");
		String femail = request.getParameter("femail");
		String random = (String)session.getAttribute("random");
		if(!random.equals(checkcode_reg)){
			String resultInfo = "验证码错误";
			resultInfo = URLEncoder.encode(resultInfo,"utf-8");
			response.sendRedirect("regdit.jsp?resultInfo="+ resultInfo);
			return;
		}
		//判断是否已占用  
		String resultInfo = "";
		List<String[]> cli= clientService.checkClientName(faliasId);
//		Client cli = clientService.findByFname(faliasId);
		if(cli.size()!=0){   
			resultInfo = "用户ID已被使用,请使用其他ID";
			resultInfo = URLEncoder.encode(resultInfo,"utf-8");
			response.sendRedirect("regdit.jsp?resultInfo="+ resultInfo);
			return;
		}
//	boolean addClient=clientService.clientReg(faliasId, agent.getFid(), faliasId,fpassword,femail);
		boolean addClient=true;  
		if(addClient){  
			resultInfo = " 提交成功，请进入邮箱激活用户！";     
			resultInfo = URLEncoder.encode(resultInfo,"utf-8");
			fc fc=new fc();
		 

			String emailInfo="您的账号已经成功创建，请点击此链接激活账号：<br/>" +
					"<a href='"+webPath+"/jump.do?key="+faliasId+"'>" +
					webPath+"/jump.do?key="+faliasId+"</a><br/>" +
									"请妥善保留这封电子邮件. 您的帐号资料如下:<br/> 帐号："+faliasId+"";      
			   
			String send=fc.sendEmail(femail, "新用户注册确认", emailInfo);       
			response.sendRedirect("regdit.jsp?resultInfo="+ resultInfo);  
		}else{  
			resultInfo = " 注册失败！ ";
			resultInfo = URLEncoder.encode(resultInfo,"utf-8");
			response.sendRedirect("regdit.jsp?resultInfo="+ resultInfo);
			return;
		}
	}
}