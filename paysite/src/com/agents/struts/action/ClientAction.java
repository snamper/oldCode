/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.agents.struts.action;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.agents.pojo.CoAgent;
import com.agents.service.ClientService;
import com.agents.util.ConnOracle;
import com.agents.util.fc;

/**
 * MyEclipse Struts
 * Creation date: 03-15-2011
 *
 * XDoclet definition:
 * @struts.action path="/client" name="clientForm" scope="request"
 */
public class ClientAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 */
	public ActionForward findCurrentClient(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		String clientID = (String)session.getAttribute("username");
//		clientID = "gai213";
		if(clientID == null || "".equals(clientID)){
			request.setAttribute("messages", " 请重新登陆 ");
			return mapping.findForward("loginout");
		}
		ClientService cService = new ClientService();
		String[] currentClient = cService.findCurrentClient(clientID);
		session.setAttribute("currentClient",currentClient);
		return mapping.findForward("findCurrentClient");
	}

	public ActionForward updateClientPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		
		String clientID = (String)session.getAttribute("username");
		if(clientID == null || "".equals(clientID)){
			request.setAttribute("messages", " 请重新登陆 ");
			return mapping.findForward("loginout");
		}
		ClientService cService = new ClientService();
		String[] currentClient = cService.findCurrentClient(clientID);
		session.setAttribute("currentClient",currentClient);
		return mapping.findForward("updateClientPage");
	}

	public ActionForward updateClient(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
//		HttpSession session = request.getSession();
		String fname = request.getParameter("fname");
		String fpassword = fc.getpv(request, "fpassword");
		String femail = fc.getpv(request, "femail");
		String ftelphone = fc.getpv(request, "ftelphone");
		String fqq = fc.getpv(request, "fqq");
		String fkey = fc.getpv(request, "fkey");
		ClientService cService = new ClientService();
		boolean flag = cService.updateClient(fname,fpassword,femail,ftelphone,fqq,fkey);
		if(flag){
			request.setAttribute("updateMessage", " 修改成功! ");
		}else{
			request.setAttribute("updateMessage", " 修改失败! ");
		}
		return mapping.findForward("updateClient");
	}

	public ActionForward loginOut(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		session.invalidate();
		return mapping.findForward("loginout");
	}

	public ActionForward modifyPwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		if (session.getAttribute("username")==null) {
			return mapping.findForward("modifypwd");  
		}
		String fName = (String)session.getAttribute("username");
		return mapping.findForward("modifypwd");
	}
	public ActionForward updatePwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		String fName = (String)session.getAttribute("username");
		String userType = (String)session.getAttribute("usertype");
		String oldPwd=request.getParameter("oldPassword");
		String newPwd=request.getParameter("newPassword");
		ClientService cService = new ClientService();
		
//		boolean checkPwd=cService.checkPwd(userType,fName, oldPwd);  
		//oracle
//		boolean checkPwd=new ConnOracle().changPWD(userType,fName, oldPwd);  
		
		
//		if (checkPwd) {  
			boolean updatePwd=new ConnOracle().changPWD(fName,oldPwd, newPwd);  
			if (updatePwd) {
				return new ActionForward ("/admin/modifyPwd.jsp?Message=chenggong");
			}else{  
				return new ActionForward ("/admin/modifyPwd.jsp?Message=shibai");
			}
//		}else{  
//			return new ActionForward ("/admin/modifyPwd.jsp?Message=oldpwdshibai");  
//		}
	}
	//修改用户详细信息
	public ActionForward findUserInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		if (session.getAttribute("username")==null) {
			return mapping.findForward("clientInfo"); 
		}  
		//用户ID
		String fName = (String)session.getAttribute("username");
		
		String userType = (String)session.getAttribute("usertype");
		//如果是员工登录，取上级ID
		if (userType.equals("staff")) {  
			fName=(String)session.getAttribute("higherId"); 
		}
		
		ClientService cService = new ClientService();
		String sql="SELECT fName,fEmail,fQQ,fPhone,fBankID,fBankSeat,fBankName,fBankNum,fContact,fbindingstate  FROM CoClient where fid='"+fName+"'"; 
		String[] clientInfo = cService.findUserInfo(sql);
		session.setAttribute("clientInfo",clientInfo);  
		session.setAttribute("message","false");  
		return mapping.findForward("clientInfo");     
	}	
	public ActionForward updateUserInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
		String fName = (String)session.getAttribute("username");
		  
		String userType = (String)session.getAttribute("usertype");
		//如果是员工登录，取上级ID
		if (userType.equals("staff")) {  
			fName=(String)session.getAttribute("higherId"); 
		}
		
		String fQQ=request.getParameter("fQQ");
		String fPhone=request.getParameter("fPhone");
		String fContact=request.getParameter("fContact");  
		
		ClientService cService = new ClientService();
		String updateSql="update CoClient set fQQ='"+fQQ+"' ,fPhone='"+fPhone+"' ,fContact='"+fContact+"' where fid='"+fName+"'"; 
		boolean update = cService.updateUserInfo(updateSql); 
	    String message="false";
	    if (update) {
	    	message="true";
		}
 		
		String sql="SELECT fName,fEmail,fQQ,fPhone,fBankID,fBankSeat,fBankName,fBankNum,fContact,fbindingstate  FROM CoClient where fid='"+fName+"'"; 
		String[] clientInfo = cService.findUserInfo(sql);
		session.setAttribute("clientInfo",clientInfo);
		session.setAttribute("message",message);    
		return mapping.findForward("clientInfo");     
	}
	//用户注册AJAX方法
    	

	public ActionForward clientRegdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		ClientService clientService=new ClientService();
		
		PrintWriter out=null;  
        out = response.getWriter(); 
		CoAgent agent = (CoAgent)session.getAttribute("currentAgent");
		String fid = request.getParameter("fid");
		String fname = request.getParameter("fname");
		String fpassword = request.getParameter("fpassword");
		
		String femail = request.getParameter("femail");
		String fphone = request.getParameter("fphone");  
		String fqq = request.getParameter("fqq");
		
		//验证码判断
		String random = (String)session.getAttribute("random");
		String checkcode_reg = request.getParameter("checkcode_reg");
		String resultInfo="";
		if(!random.equals(checkcode_reg)){
		    resultInfo = "checkcode_error";
			out.write(resultInfo);
			return null;
		}
		//判断用户ID是否重复  
		List<String[]> cli= clientService.checkClientName(fid);
		if(cli.size()!=0){   
			resultInfo = "fid_error";
			out.write(resultInfo);
			return null;
		}
		
		boolean addClient=clientService.clientReg(fid, agent.getFid(), fname,fpassword,femail,fphone,fqq); 
		if(addClient){
			resultInfo = "true"; 
			out.write(resultInfo);
			return null;
		}  
         out.println("");    
	    return null;	
	}
}