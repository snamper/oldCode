<?xml version="1.0" encoding="UTF-8"?>

<web-app id="web-app_1" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">
   <display-name>orderfill</display-name>
   <distributable/>

    <!--
    To use non XDoclet filters, create a filters.xml file that
    contains the additional filters (eg Sitemesh) and place it in your
    project's merge dir.  Don't include filter-mappings in this file,
    include them in a file called filter-mappings.xml and put that in
    the same directory.
    -->

    <!--
    To use non XDoclet filter-mappings, create a filter-mappings.xml file that
    contains the additional filter-mappings and place it in your
    project's merge dir.
    -->

    <!--
    To use non XDoclet listeners, create a listeners.xml file that
    contains the additional listeners and place it in your
    project's merge dir.
    -->

   <servlet>
      <display-name>HunanQBCheck</display-name>
      <servlet-name>HunanQBCheck</servlet-name>
      <servlet-class>accocheck.HunanQBCheck</servlet-class>

   </servlet>
   <servlet>
      <display-name>ConfirmLogResult</display-name>
      <servlet-name>ConfirmLogResult</servlet-name>
      <servlet-class>commfill.ConfirmLogResult</servlet-class>

   </servlet>
   <servlet>
      <display-name>GetAccount</display-name>
      <servlet-name>GetAccount</servlet-name>
      <servlet-class>accofill.GetAccount</servlet-class>

   </servlet>
   <servlet>
      <display-name>AccountCheck</display-name>
      <servlet-name>AccountCheck</servlet-name>
      <servlet-class>accocheck.AccountCheck</servlet-class>

   </servlet>
   <servlet>
      <display-name>UpCheckCode</display-name>
      <servlet-name>UpCheckCode</servlet-name>
      <servlet-class>commfill.UpCheckCode</servlet-class>

   </servlet>
   <servlet>
      <display-name>GetCard</display-name>
      <servlet-name>GetCard</servlet-name>
      <servlet-class>cardfill.GetCard</servlet-class>

   </servlet>
   <servlet>
      <display-name>CardResult</display-name>
      <servlet-name>CardResult</servlet-name>
      <servlet-class>cardfill.CardResult</servlet-class>

   </servlet>
   <servlet>
      <display-name>ACheckResult</display-name>
      <servlet-name>ACheckResult</servlet-name>
      <servlet-class>accofill.ACheckResult</servlet-class>

   </servlet>
   <servlet>
      <display-name>AccountResult</display-name>
      <servlet-name>AccountResult</servlet-name>
      <servlet-class>accofill.AccountResult</servlet-class>

   </servlet>
   <servlet>
      <display-name>AcceptLog</display-name>
      <servlet-name>AcceptLog</servlet-name>
      <servlet-class>commfill.AcceptLog</servlet-class>

   </servlet>

  <!--
  To use non XDoclet servlets, create a servlets.xml file that
  contains the additional servlets (eg Struts) and place it in your
  project's merge dir.  Don't include servlet-mappings in this file,
  include them in a file called servlet-mappings.xml and put that in
  the same directory.
  -->

   <servlet-mapping>
      <servlet-name>HunanQBCheck</servlet-name>
      <url-pattern>/HunanQBCheck</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>ConfirmLogResult</servlet-name>
      <url-pattern>/ConfirmLogResult</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>GetAccount</servlet-name>
      <url-pattern>/GetAccount</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>AccountCheck</servlet-name>
      <url-pattern>/AccountCheck</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>UpCheckCode</servlet-name>
      <url-pattern>/UpCheckCode</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>GetCard</servlet-name>
      <url-pattern>/GetCard</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>CardResult</servlet-name>
      <url-pattern>/CardResult</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>ACheckResult</servlet-name>
      <url-pattern>/ACheckResult</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>AccountResult</servlet-name>
      <url-pattern>/AccountResult</url-pattern>
   </servlet-mapping>
   <servlet-mapping>
      <servlet-name>AcceptLog</servlet-name>
      <url-pattern>/AcceptLog</url-pattern>
   </servlet-mapping>

   <!--
   To specify mime mappings, create a file named mime-mappings.xml, put it in your project's mergedir.
   Organize mime-mappings.xml following this DTD slice:

   <!ELEMENT mime-mapping (extension, mime-type)>
   -->

   <!--
   To specify error pages, create a file named error-pages.xml, put it in your project's mergedir.
   Organize error-pages.xml following this DTD slice:

   <!ELEMENT error-page ((error-code | exception-type), location)>
   -->

  <!--
  To add taglibs by xml, create a file called taglibs.xml and place it
  in your merge dir.
  -->

   <!--
   To set up security settings for your web app, create a file named web-security.xml, put it in your project's mergedir.
   Organize web-security.xml following this DTD slice:

   <!ELEMENT security-constraint (display-name?, web-resource-collection+, auth-constraint?, user-data-constraint?)>
   <!ELEMENT web-resource-collection (web-resource-name, description?, url-pattern*, http-method*)>
   <!ELEMENT web-resource-name (#PCDATA)>
   <!ELEMENT url-pattern (#PCDATA)>
   <!ELEMENT http-method (#PCDATA)>
   <!ELEMENT user-data-constraint (description?, transport-guarantee)>
   <!ELEMENT transport-guarantee (#PCDATA)>

   <!ELEMENT login-config (auth-method?, realm-name?, form-login-config?)>
   <!ELEMENT auth-method (#PCDATA)>
   <!ELEMENT realm-name (#PCDATA)>
   <!ELEMENT form-login-config (form-login-page, form-error-page)>
   <!ELEMENT form-login-page (#PCDATA)>
   <!ELEMENT form-error-page (#PCDATA)>
   -->

</web-app>
